@model ArtWebApp.DataModels.FreightRequestMaster

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/ArtMVC/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>
<script src="~/Areas/ArtMVCMerchandiser/Js/FrieightChargeScript.js"></script>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>FreightRequestMaster</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FromParty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.FromParty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FromParty, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.ToParty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ToParty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ToParty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Shipper, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Shipper, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Shipper, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContentofPackage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ContentofPackage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContentofPackage, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.DebitTo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.DebitTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DebitTo, "", new { @class = "text-danger" })
            </div>

        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Merchandiser, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Merchandiser, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Merchandiser, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ApproximateCharges, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ApproximateCharges, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApproximateCharges, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.ForwarderDetails, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ForwarderDetails, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ForwarderDetails, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.ApprovedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ApprovedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApprovedBy, "", new { @class = "text-danger" })
            </div>
        </div>

    

     

        <div class="form-group">
            @Html.LabelFor(model => model.ApprovedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ApprovedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApprovedDate, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.IsApproved, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.IsApproved, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsApproved, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            @Html.LabelFor(model => model.IsPosted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.IsPosted, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsPosted, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-4">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

        </div>
        <div class="details">
            <h2>
                Job Order Details
            </h2>
            <table class="table table-responsive">
                <tr>
                    <td>Charges</td>
                    <td>Rate</td>
                    <td>Selling</td>
                    <td>Remark</td>
                    <td>&nbsp;</td>
                </tr>
                <tr class="mycontainer" id="mainrow">
                    <td>
                        <select id="AtcID" class="pc form-control">
                            <option>Select</option>
                        </select>
                        <span class="error">Select Atc</span>
                    </td>
                    <td>


                        <input type="text" id="Allowed Value" class="quantity form-control" />
                        <span class="error"> Allowed Value required</span>



                    </td>
                    <td>
                        <input type="text" id="New Value" class="quantity form-control" />
                        <span class="error">Valid Value required</span>
                    </td>
                    <td>
                        <input type="text" id="Remark" class="rate form-control" />
                        <span class="error">Valid Remark required</span>
                    </td>
                    <td>
                        <input type="button" id="add" value="add" style="width:80px" class="btn btn-success" />
                    </td>
                </tr>
            </table>
            <div id="orderItems">
                <table class="table table-responsive" id="orderdetailsItems"></table>
                <span id="orderItemError" style="color:red"></span>
            </div>
            <div style="padding:10px 0; text-align:right">
                @*<input id="submit" type="button" value="Save Order" class="btn btn-warning" style="padding:10px 20px" />*@

                <input type="submit" value="Create" class="btn btn-default" style="padding:10px 20px" />

            </div>
        </div>


}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
